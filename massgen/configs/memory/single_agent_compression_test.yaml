# Single Agent Compression Test
#
# Simple config to test per-agent memory and compression with ONE agent.
# Set very low thresholds to trigger compression quickly.
#
# Run with:
#   uv run massgen \
#     --config massgen/configs/memory/single_agent_compression_test.yaml \
#     "Explain Python's garbage collection, GIL, asyncio, descriptors, and metaclasses in extreme detail with many code examples."

agents:
  - id: "test_agent"
    backend:
      type: "openai"
      model: "gpt-5-nano"
      cwd: "workspace1"

# Global memory configuration
memory:
  enabled: true

  conversation_memory:
    enabled: true

  persistent_memory:
    enabled: true

  compression:
    trigger_threshold: 0.01   # Compress at 1% (very low for quick testing)
    target_ratio: 0.005       # Keep 0.5% after compression

  # Memory retrieval configuration
  retrieval:
    limit: 5              # Number of memory facts to retrieve from mem0 (default: 5)
    exclude_recent: true  # Only retrieve after compression to avoid duplicates (default: true)
                          # When true: retrieval skipped until compression occurs
                          # When false: always retrieve (may duplicate recent context)

# Orchestrator config
orchestrator:
  snapshot_storage: "test_compression_sessions"
  agent_temporary_workspace: "test_compression_workspace"
  context_paths:
    - path: "massgen"
      permission: "read"

# UI
ui:
  display_type: "rich_terminal"
  logging_enabled: true

# Expected behavior:
# Turn 1:
#   - Agent responds with long response
#   - Context window logged: e.g., 2,500 / 128,000 tokens (2.0%)
#   - ‚è≠Ô∏è Skipping retrieval (no compression yet, all context in conversation_memory)
#   - Response added to conversation_memory
#
# Turn 2 (if context grows):
#   - Context: 5,200 tokens (4.1%)
#   - Still no retrieval (exclude_recent=true, no compression yet)
#
# Turn X (context exceeds 1% trigger):
#   - ‚ö†Ô∏è Context Window: X tokens - Approaching limit!
#   - üîÑ Attempting compression (X ‚Üí Y tokens)
#   - üì¶ Context compressed: Removed N old messages
#   - ‚úÖ Conversation history updated
#   - _compression_has_occurred = True
#
# Turn X+1 (after compression):
#   - üîç Retrieving compressed memories (limit=5)
#   - üí≠ Retrieved N memory facts from mem0
#   - Facts injected as system message
#   - Agent sees: recent context + retrieved facts (no duplication!)
#
# Session management:
# - Unified sessions: orchestrator session = memory session
# - Single question mode: Creates temp_YYYYMMDD_HHMMSS per run (isolated)
# - Qdrant database: Shared at .massgen/qdrant (not /tmp)
# - Memories persist across machine restarts
# - Each agent isolated by agent_id + session_id
